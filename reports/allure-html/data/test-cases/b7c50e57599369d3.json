{"uid":"b7c50e57599369d3","name":"test_login_ddt","fullName":"test_003_login_ddt.Test_LoginDDT#test_login_ddt","historyId":"a3c770be107c2ac3adce4d01b839e0f3","time":{"start":1750693330268,"stop":1750693368693,"duration":38425},"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_003_login_ddt.Test_LoginDDT object at 0x0000015318434410>\nsetup = <selenium.webdriver.remote.webdriver.WebDriver (session=\"3f41e733-e34d-49ac-8b08-dec6974c136d\")>\n\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.regression\n    def test_login_ddt(self,setup):\n        self.logger.info(\"********* Test Login DDT Started *********\")\n        self.rows = XLUtils.getRowCount(self.path,\"Sheet1\")\n        lst_status = []\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"********* Launching Application *********\")\n        self.driver.maximize_window()\n        self.driver.implicitly_wait(5)\n        self.hp = HomePage(self.driver)\n        self.lp = LoginPage(self.driver)\n        self.ma = MyAccountPage(self.driver)\n        for r in range(2,self.rows+1):\n            self.hp.clickMyAccount()\n            self.hp.clickLogin()\n    \n            self.email = XLUtils.readData(self.path,\"Sheet1\",r,1)\n            self.password = XLUtils.readData(self.path, \"Sheet1\", r, 2)\n            self.exp = XLUtils.readData(self.path, \"Sheet1\", r, 3)\n    \n            self.lp.setEmail(self.email)\n            self.lp.setPassword(self.password)\n            self.lp.clickLogin()\n            time.sleep(2)\n    \n            self.targetpage = self.lp.isMyAccountPageExists()\n    \n            if self.exp == \"Valid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Pass\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Fail\")\n    \n            elif self.exp == \"Invalid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Fail\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Pass\")\n        if \"Fail\" not in lst_status:\n            assert True\n        else:\n>           assert False\nE           assert False\n\ntestCases\\test_003_login_ddt.py:65: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1750693327990,"stop":1750693330268,"duration":2278},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"browser_platform","time":{"start":1750693327990,"stop":1750693327990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False","statusTrace":"self = <testCases.test_003_login_ddt.Test_LoginDDT object at 0x0000015318434410>\nsetup = <selenium.webdriver.remote.webdriver.WebDriver (session=\"3f41e733-e34d-49ac-8b08-dec6974c136d\")>\n\n    @allure.severity(allure.severity_level.MINOR)\n    @pytest.mark.regression\n    def test_login_ddt(self,setup):\n        self.logger.info(\"********* Test Login DDT Started *********\")\n        self.rows = XLUtils.getRowCount(self.path,\"Sheet1\")\n        lst_status = []\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"********* Launching Application *********\")\n        self.driver.maximize_window()\n        self.driver.implicitly_wait(5)\n        self.hp = HomePage(self.driver)\n        self.lp = LoginPage(self.driver)\n        self.ma = MyAccountPage(self.driver)\n        for r in range(2,self.rows+1):\n            self.hp.clickMyAccount()\n            self.hp.clickLogin()\n    \n            self.email = XLUtils.readData(self.path,\"Sheet1\",r,1)\n            self.password = XLUtils.readData(self.path, \"Sheet1\", r, 2)\n            self.exp = XLUtils.readData(self.path, \"Sheet1\", r, 3)\n    \n            self.lp.setEmail(self.email)\n            self.lp.setPassword(self.password)\n            self.lp.clickLogin()\n            time.sleep(2)\n    \n            self.targetpage = self.lp.isMyAccountPageExists()\n    \n            if self.exp == \"Valid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Pass\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Fail\")\n    \n            elif self.exp == \"Invalid\":\n                if self.targetpage == True:\n                    lst_status.append(\"Fail\")\n                    self.ma.clickLogout()\n                else:\n                    lst_status.append(\"Pass\")\n        if \"Fail\" not in lst_status:\n            assert True\n        else:\n>           assert False\nE           assert False\n\ntestCases\\test_003_login_ddt.py:65: AssertionError","steps":[],"attachments":[{"uid":"19021c656bf30b3f","name":"test_login_ddt","source":"19021c656bf30b3f.png","type":"image/png","size":161436},{"uid":"fc4d8ad5ac2f72e5","name":"log","source":"fc4d8ad5ac2f72e5.txt","type":"text/plain","size":650}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1750693368857,"stop":1750693369518,"duration":661},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"severity","value":"minor"},{"name":"tag","value":"regression"},{"name":"suite","value":"test_003_login_ddt"},{"name":"subSuite","value":"Test_LoginDDT"},{"name":"host","value":"Waivgen-0035"},{"name":"thread","value":"9488-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_003_login_ddt"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[{"uid":"d793a30c98819ab7","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1750693285566,"stop":1750693325001,"duration":39435}},{"uid":"c7cf375f944b7769","status":"failed","statusDetails":"AssertionError: assert False","time":{"start":1750693239462,"stop":1750693278928,"duration":39466}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["regression"]},"source":"b7c50e57599369d3.json","parameterValues":[]}