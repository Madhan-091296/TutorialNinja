{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='My Account123']\"}\n  (Session info: MicrosoftEdge=137.0.3296.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff6b2223865+25605]\n\t(No symbol) [0x0x7ff6b2173970]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6b24a6e7a+1962506]\n\t(No symbol) [0x0x7ff6b1f886c4]\n\t(No symbol) [0x0x7ff6b1f8898b]\n\t(No symbol) [0x0x7ff6b1fc9af7]\n\t(No symbol) [0x0x7ff6b1fa9e8f]\n\t(No symbol) [0x0x7ff6b1f7ea5d]\n\t(No symbol) [0x0x7ff6b1fc75df]\n\t(No symbol) [0x0x7ff6b1fa9bb3]\n\t(No symbol) [0x0x7ff6b1f7df56]\n\t(No symbol) [0x0x7ff6b1f7d463]\n\t(No symbol) [0x0x7ff6b1f7dd83]\n\t(No symbol) [0x0x7ff6b207e10d]\n\t(No symbol) [0x0x7ff6b208dce8]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6b2308839+265161]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6b2310111+296097]\n\t(No symbol) [0x0x7ff6b2182111]\n\t(No symbol) [0x0x7ff6b217a5b4]\n\t(No symbol) [0x0x7ff6b217a703]\n\t(No symbol) [0x0x7ff6b216b8d6]\n\tBaseThreadInitThunk [0x0x7ffa90ede8d7+23]\n\tRtlUserThreadStart [0x0x7ffa9103c34c+44]", "trace": "self = <testCases.test_002_login.TestLogin object at 0x0000022B5BADAC10>\nsetup = <selenium.webdriver.edge.webdriver.WebDriver (session=\"9a94b653eba5db391a557a783293a35c\")>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.smoke\n    @pytest.mark.regression\n    @pytest.mark.sanity\n    def test_login(self,setup):\n        self.logger.info(\"********* Test Login Started *********\")\n        self.driver = setup\n        self.driver.get(self.baseURL)\n        self.logger.info(\"********* Launching Application *********\")\n        self.driver.maximize_window()\n        self.driver.implicitly_wait(10)\n        self.hp = HomePage(self.driver)\n        self.logger.info(\"********* Clicking on My Account --> Login *********\")\n>       self.hp.clickMyAccount()\n\ntestCases\\test_002_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageObjects\\HomePage.py:16: in clickMyAccount\n    self.driver.find_element(By.XPATH, self.lnk_myaccount_xpath).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022B7227F770>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...[0x0x7ff6b216b8d6]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffa90ede8d7+23]\\\\n\\\\tRtlUserThreadStart [0x0x7ffa9103c34c+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='My Account123']\"}\nE         (Session info: MicrosoftEdge=137.0.3296.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6b2223865+25605]\nE       \t(No symbol) [0x0x7ff6b2173970]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6b24a6e7a+1962506]\nE       \t(No symbol) [0x0x7ff6b1f886c4]\nE       \t(No symbol) [0x0x7ff6b1f8898b]\nE       \t(No symbol) [0x0x7ff6b1fc9af7]\nE       \t(No symbol) [0x0x7ff6b1fa9e8f]\nE       \t(No symbol) [0x0x7ff6b1f7ea5d]\nE       \t(No symbol) [0x0x7ff6b1fc75df]\nE       \t(No symbol) [0x0x7ff6b1fa9bb3]\nE       \t(No symbol) [0x0x7ff6b1f7df56]\nE       \t(No symbol) [0x0x7ff6b1f7d463]\nE       \t(No symbol) [0x0x7ff6b1f7dd83]\nE       \t(No symbol) [0x0x7ff6b207e10d]\nE       \t(No symbol) [0x0x7ff6b208dce8]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6b2308839+265161]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6b2310111+296097]\nE       \t(No symbol) [0x0x7ff6b2182111]\nE       \t(No symbol) [0x0x7ff6b217a5b4]\nE       \t(No symbol) [0x0x7ff6b217a703]\nE       \t(No symbol) [0x0x7ff6b216b8d6]\nE       \tBaseThreadInitThunk [0x0x7ffa90ede8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffa9103c34c+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "attachments": [{"name": "test_login", "source": "c7dd45a8-c39a-4426-a248-985524e97b9c-attachment.png", "type": "image/png"}, {"name": "log", "source": "0d2f3b0d-3644-4d30-a5c2-adc4c9a1d5de-attachment.txt", "type": "text/plain"}], "start": 1750262317017, "stop": 1750262328027, "uuid": "56017dba-6314-4266-9dd4-864bf85823b1", "historyId": "f145aa50331ca8e73372f914f0e5f06b", "testCaseId": "f145aa50331ca8e73372f914f0e5f06b", "fullName": "test_002_login.TestLogin#test_login", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "smoke"}, {"name": "suite", "value": "test_002_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Waivgen-0035"}, {"name": "thread", "value": "29424-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_002_login"}]}